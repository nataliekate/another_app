<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport"
    content="width=device-width, initial-scale=1.0">
  <title>ðŸ§Š</title>
  <!-- Link to your custom CSS file - Ensure this path is correct -->
  <link rel="stylesheet"
    href="/styles.css">
</head>

<body>
  <div class="app-container">
    <h1 class="app-heading">ðŸ§ŠðŸ§ŠðŸ§ŠðŸ§Š</h1>

    <% if(statusMessage)
      {
      %>
      <div
        class="status-message <%= statusMessage.includes('Error') ? 'error' : 'success' %>">
        <%= statusMessage
          %>
      </div>
      <% }
        %>

        <form action="/generate-file"
          method="POST">
          <div class="form-field-group">
            <label for="configData"
              class="form-label">Config Data (JSON)</label>
            <textarea id="configData"
              name="configData"
              style="font-family:'Courier New', Courier, monospace; font-size: 1rem;"
              placeholder='Paste your JSON object here, e.g., {"key": "value", "number": 123}'
              rows="15"
              class="form-textarea"
              required
              onchange="validateJsonInput()"><%= typeof formData !== 'undefined' && formData.configData ? formData.configData : '' %></textarea>
            <div class="validation-error">
              <p id="json-error-message"
                style="color:red; font-size: .8rem;"></p>
            </div>
          </div>

          <button type="submit"
            class="form-button"
            id="submit-button">Generate & Download File</button>
        </form>
  </div>
  <script>
    // Get references to elements
    const configDataTextarea = document.getElementById('configData');
    const jsonErrorMessage = document.getElementById('json-error-message');
    const submitButton = document.getElementById('submit-button');

    // Validation function called on input
    function validateJsonInput() {
      const inputValue = configDataTextarea.value.trim();

      if (inputValue === '') {
        jsonErrorMessage.textContent = ''; // Clear error if empty
        submitButton.disabled = true; // Disable if empty
        return;
      }

      try {
        JSON.parse(inputValue);
        jsonErrorMessage.textContent = ''; // Clear error
        submitButton.disabled = false; // Enable button
      } catch (e) {
        debugger;
        jsonErrorMessage.textContent = e.message;
        submitButton.disabled = true; // Disable button
      }
    }

    // Run validation on page load to set initial button state
    document.addEventListener('DOMContentLoaded', validateJsonInput);
  </script>
</body>

</html>